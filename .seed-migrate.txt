
we need to look at two projects, my rsb framework and my xstream library. in xstream we have the RSB_Integration doc assome older suggestions for rolling common features back into RSB and letting xstream do more advanced implements. Then in RSB we started to copy parts of Xstream into RSB namely the closure version of rsb functions like sed (-> xsed),    some of the streamable library, and stubbed out some potential modules in src/_todo dev_token (for low level token,    tokenbucket, namespace types etc), and dev_gen for string and stream generators. Take a look at Xstream to understand  it (its already using RSB for some things), and then consider RSB in its docs/tech folder the MODULE_SPEC and HOWTO    update RSB are critical guiding rules for RSB development. Come up with a plan for what features from xstream make     sense for framework level usage vs high level customization/composition in xstream. maybe even some feature gaps that  would be good value adds, or things in RSB that are already doing the same work just named differently. note that we   are still in the process of fixing old libraries but the ones in src/folders are generally considered stable. in docs/ tech/features we have FEATURE files for each major feature this is also a sign of a complete feature, other functions  in marcos/ or some of the individual files under src/ are still being migrated. so keep these in mind. do your researchand report your findings, create RSB_XSTREAM_MIGRATION.txt with your clear instructions and architecture  recommendations. >

from here we created docs in rsb/.session/xstream migration, roadmap, analysis; you may need to re-read  docs/tech/reference REBEL and RSB_ARCH, as well as tech/development HOWTO and MODULE_SPEC, these are references to the full filename, but these will teach you the RSB architecture and how to develop in RSB. the docs/tech/features show all feature
spec files for implemented features, note that some src code files are legacy and havent been migrated over . usually the migrated features will have their own module folder; macros/ notoriously is being refactored, and other refactor notes and status are in .session/refactor which you had read previously.
